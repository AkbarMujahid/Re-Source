{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the Re-Source application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user entity."
        },
        "email": {
          "type": "string",
          "description": "User's email address.",
          "format": "email"
        },
        "isBlocked": {
          "type": "boolean",
          "description": "Indicates if the user is blocked from using the application."
        },
        "isAdmin": {
          "type": "boolean",
          "description": "Indicates if the user has administrative privileges."
        }
      },
      "required": [
        "id",
        "email",
        "isBlocked"
      ]
    },
    "Listing": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Listing",
      "type": "object",
      "description": "Represents an academic resource listing.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the listing entity."
        },
        "userId": {
          "type": "string",
          "description": "Reference to the User who created the listing. (Relationship: User 1:N Listing)"
        },
        "title": {
          "type": "string",
          "description": "Title of the listing."
        },
        "description": {
          "type": "string",
          "description": "Detailed description of the resource being listed."
        },
        "category": {
          "type": "string",
          "description": "Category of the resource (e.g., textbook, notes)."
        },
        "department": {
          "type": "string",
          "description": "Department associated with the resource."
        },
        "semester": {
          "type": "string",
          "description": "Semester for which the resource is relevant."
        },
        "price": {
          "type": "number",
          "description": "Price of the resource."
        },
        "imageUrl": {
          "type": "string",
          "description": "URL of the image associated with the listing."
        },
        "isApproved": {
          "type": "boolean",
          "description": "Indicates if the listing is approved by an administrator."
        }
      },
      "required": [
        "id",
        "userId",
        "title",
        "description",
        "category",
        "department",
        "semester",
        "price",
        "imageUrl",
        "isApproved"
      ]
    },
    "ChatMessage": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ChatMessage",
      "type": "object",
      "description": "Represents a message exchanged between users in the chat feature.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the chat message."
        },
        "senderId": {
          "type": "string",
          "description": "Reference to the User who sent the message. (Relationship: User 1:N ChatMessage (Sender))"
        },
        "receiverId": {
          "type": "string",
          "description": "Reference to the User who received the message. (Relationship: User 1:N ChatMessage (Receiver))"
        },
        "message": {
          "type": "string",
          "description": "Content of the message."
        },
        "timestamp": {
          "type": "string",
          "description": "Timestamp indicating when the message was sent.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "senderId",
        "receiverId",
        "message",
        "timestamp"
      ]
    },
    "Wishlist": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Wishlist",
      "type": "object",
      "description": "Represents a user's wishlist, containing references to saved listings.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the wishlist."
        },
        "userId": {
          "type": "string",
          "description": "Reference to the User who owns the wishlist. (Relationship: User 1:N Wishlist)"
        },
        "listingIds": {
          "type": "array",
          "description": "References to Listings saved in the wishlist. (Relationship: Listing N:N Wishlist)",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "userId",
        "listingIds"
      ]
    },
    "Report": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Report",
      "type": "object",
      "description": "Represents a user-submitted report against a listing for moderation.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the report."
        },
        "listingId": {
          "type": "string",
          "description": "Reference to the Listing that is being reported."
        },
        "reporterId": {
          "type": "string",
          "description": "Reference to the User who submitted the report."
        },
        "reason": {
          "type": "string",
          "description": "The reason provided by the user for the report."
        },
        "summary": {
          "type": "string",
          "description": "An AI-generated summary of the report for quick admin review."
        },
        "status": {
          "type": "string",
          "description": "The current status of the report (e.g., 'pending', 'resolved').",
          "enum": [
            "pending",
            "resolved"
          ]
        }
      },
      "required": [
        "id",
        "listingId",
        "reporterId",
        "reason",
        "summary",
        "status"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous",
      "google.com"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profiles. User ID is used as the document ID.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            }
          ]
        }
      },
      {
        "path": "/listings/{listingId}",
        "definition": {
          "entityName": "Listing",
          "schema": {
            "$ref": "#/backend/entities/Listing"
          },
          "description": "Stores academic resource listings. Includes denormalized 'userId' for authorization independence.",
          "params": [
            {
              "name": "listingId",
              "description": "The unique identifier for the listing."
            }
          ]
        }
      },
      {
        "path": "/chat_messages/{chatMessageId}",
        "definition": {
          "entityName": "ChatMessage",
          "schema": {
            "$ref": "#/backend/entities/ChatMessage"
          },
          "description": "Stores chat messages exchanged between users.",
          "params": [
            {
              "name": "chatMessageId",
              "description": "The unique identifier for the chat message."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/wishlists/{wishlistId}",
        "definition": {
          "entityName": "Wishlist",
          "schema": {
            "$ref": "#/backend/entities/Wishlist"
          },
          "description": "Stores user wishlists. Path based ownership.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "wishlistId",
              "description": "The unique identifier for the wishlist."
            }
          ]
        }
      },
      {
        "path": "/reports/{reportId}",
        "definition": {
          "entityName": "Report",
          "schema": {
            "$ref": "#/backend/entities/Report"
          },
          "description": "Stores user-submitted reports for listings.",
          "params": [
            {
              "name": "reportId",
              "description": "The unique identifier for the report."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to provide a secure, scalable, and easily maintainable data model. It uses separate collections for distinct data types (users, listings, etc.) for clarity and security. Path-based ownership is used for wishlists to simplify security rules. Denormalization of `userId` in listings ensures ownership can be checked without extra database reads. Admin-specific collections like `reports` are added for moderation purposes."
  }
}
